{"version":3,"sources":["../src/percentage_ctrl.js"],"names":["getColorForValue","data","value","i","thresholds","length","colorMap","_","first","PanelCtrl","moment","$","kbn","TimeSeries","metricsTabDirective","PercentagePluginCtrl","$scope","$injector","$rootScope","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","format","prefix","postfix","nullText","valueMaps","op","text","mappingTypes","name","rangeMaps","from","to","mappingType","nullPointMode","valueName","prefixFontSize","valueFontSize","postfixFontSize","colorBackground","colorValue","colors","sparkline","show","full","lineColor","fillColor","gauge","minValue","maxValue","thresholdMarkers","thresholdLabels","tableColumn","defaults","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","OnRefresh","$q","get","datasourceSrv","timeSrv","templateSrv","scope","fontSizes","addEditorTab","unitFormats","getUnitFormats","subItem","render","otherPanelInFullscreenMode","snapshotData","updateTimeRange","isArray","emit","dataStream","error","loading","setTimeQueryStart","then","issueQueries","handleQueryResult","catch","err","cancelled","console","log","message","inspector","timing","queryStart","Date","getTime","queryEnd","intervalOverride","replace","scopedVars","res","calculateInterval","range","resolution","intervalMs","timeInfo","timeFrom","timeFromInterpolated","timeFromInfo","rangeUtil","describeTextRange","invalid","isString","rangeRaw","timeFromDate","dateMath","parse","display","timeShift","timeShiftInterpolated","timeShiftInfo","parseDateMath","hideTimeOverride","timeRange","raw","applyPanelTimeOverrides","Math","ceil","window","width","span","Promise","resolve","reject","when","Object","assign","metricsQuery","panelId","id","renderer","query","result","setTimeQueryEnd","Error","datapoints","subscribe","handleDataStream","dashboard","snapshot","percentage","splice","dataList","type","dataType","tableData","map","tableHandler","setTableValues","series","seriesHandler","setValues","seriesData","alias","target","flotpairs","getFlotPairs","columnNames","columns","forEach","column","columnIndex","tableColumnOptions","find","setTableColumnToSensibleDefault","rows","row","datapoint","key","push","col","highestValue","lowestValue","Number","MAX_VALUE","valueFormatted","escape","valueRounded","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","decimals","scaledDecimals","roundValue","setValueMapping","options","background","tmp","isNumber","delta","dec","floor","LN10","magn","pow","norm","size","max","JSON","stringify","lastPoint","last","lastValue","stats","extend","label","parseFloat","index","indexOf","rangeMap","elem","attrs","ctrl","$location","linkSrv","$timeout","linkInfo","$panelContainer","setElementHeight","css","height","applyColoringThresholds","valueString","color","getSpan","className","fontSize","getBigValueHtml","body","getValueText","addGauge","dimension","min","invalidGaugeRange","plotCanvas","plotCss","top","margin","position","bgColor","config","bootData","user","lightTheme","fontScale","parseInt","gaugeWidth","thresholdMarkersWidth","gauges","border","shadow","frame","layout","thresholdWidth","cell","threshold","values","font","formatter","family","append","plotSeries","plot","addSparkline","setTimeout","bottom","left","dynamicHeightMargin","round","legend","lines","fill","lineWidth","yaxes","xaxis","mode","valueOf","grid","hoverable","split","strVale","trim","isNaN","fullscreen","html","toggleClass","getPanelLinkAnchorInfo","hookupDrilldownLinkTooltip","drilldownTooltip","mouseleave","detach","click","evt","parents","redirectWindow","open","href","location","url","mousemove","e","title","place_tt","pageX","pageY","renderingCompleted","templateUrl"],"mappings":"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","file":"percentage_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\n\nimport moment from 'moment';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport 'jquery.flot';\nimport 'jquery.flot.gauge';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series2';\nimport {metricsTabDirective} from 'app/features/panel/metrics_tab';\n\nexport class PercentagePluginCtrl extends PanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n\n    var panelDefaults = {\n      links: [],\n      datasource: null,\n      maxDataPoints: 100,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      format: 'none',\n      prefix: '',\n      postfix: '',\n      nullText: null,\n      valueMaps: [\n        { value: 'null', op: '=', text: 'N/A' }\n      ],\n      mappingTypes: [\n        {name: 'value to text', value: 1},\n        {name: 'range to text', value: 2},\n      ],\n      rangeMaps: [\n        { from: 'null', to: 'null', text: 'N/A' }\n      ],\n      mappingType: 1,\n      nullPointMode: 'connected',\n      valueName: 'avg',\n      prefixFontSize: '50%',\n      valueFontSize: '80%',\n      postfixFontSize: '50%',\n      thresholds: '',\n      colorBackground: false,\n      colorValue: false,\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n      sparkline: {\n        show: false,\n        full: false,\n        lineColor: 'rgb(31, 120, 193)',\n        fillColor: 'rgba(31, 118, 189, 0.18)',\n      },\n      gauge: {\n        show: false,\n        minValue: 0,\n        maxValue: 100,\n        thresholdMarkers: true,\n        thresholdLabels: false\n      },\n      tableColumn: '',\n    };\n\n    _.defaults(this.panel, panelDefaults);\n\n    //this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    //this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.OnRefresh.bind(this));\n\n    this.$q = $injector.get('$q');\n    this.datasourceSrv = $injector.get('datasourceSrv');\n    this.timeSrv = $injector.get('timeSrv');\n    this.templateSrv = $injector.get('templateSrv');\n    this.scope = $scope;\n\n  }\n\n  onInitEditMode() {\n    this.fontSizes = ['20%', '30%','50%','70%','80%','100%', '110%', '120%', '150%', '170%', '200%'];\n    this.addEditorTab('Metrics', metricsTabDirective);\n    //this.addEditorTab('Metrics', 'public/plugins/grafana-percentage-panel/editor.html', 2);\n    this.addEditorTab('Options', 'public/app/plugins/panel/singlestat/editor.html', 3);\n    this.addEditorTab('Value Mappings', 'public/app/plugins/panel/singlestat/mappings.html', 4);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  //GOT FROM https://raw.githubusercontent.com/grafana/grafana/master/public/app/features/panel/metrics_panel_ctrl.ts\n  OnRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) { return; }\n\n    // if we have snapshot data use that\n    if (this.panel.snapshotData) {\n      this.updateTimeRange();\n      var data = this.panel.snapshotData;\n      // backward compatability\n      if (!_.isArray(data)) {\n        data = data.data;\n      }\n\n      this.events.emit('data-snapshot-load', data);\n      return;\n    }\n\n    // // ignore if we have data stream\n    if (this.dataStream) {\n      return;\n    }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n\n    // load datasource service\n    this.setTimeQueryStart();\n    this.datasourceSrv.get(this.panel.datasource)\n    .then(this.updateTimeRange.bind(this))\n    .then(this.issueQueries.bind(this))\n    .then(this.handleQueryResult.bind(this))\n    .catch(err => {\n      // if cancelled  keep loading set to true\n      if (err.cancelled) {\n        console.log('Panel request cancelled', err);\n        return;\n      }\n\n      this.loading = false;\n      this.error = err.message || \"Request Error\";\n      this.inspector = {error: err};\n\n      if (err.data) {\n        if (err.data.message) {\n          this.error = err.data.message;\n        }\n        if (err.data.error) {\n          this.error = err.data.error;\n        }\n      }\n\n      this.events.emit('data-error', err);\n      console.log('Panel data error:', err);\n    });\n  }\n\n  setTimeQueryStart() {\n    this.timing.queryStart = new Date().getTime();\n  }\n\n  setTimeQueryEnd() {\n    this.timing.queryEnd = new Date().getTime();\n  }\n\n  calculateInterval() {\n    var intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    var res = kbn.calculateInterval(this.range, this.resolution, intervalOverride);\n    this.interval = res.interval;\n    this.intervalMs = res.intervalMs;\n  }\n\n  applyPanelTimeOverrides() {\n    this.timeInfo = '';\n\n    // check panel time overrrides\n    if (this.panel.timeFrom) {\n      var timeFromInterpolated = this.templateSrv.replace(this.panel.timeFrom, this.panel.scopedVars);\n      var timeFromInfo = rangeUtil.describeTextRange(timeFromInterpolated);\n      if (timeFromInfo.invalid) {\n        this.timeInfo = 'invalid time override';\n        return;\n      }\n\n      if (_.isString(this.rangeRaw.from)) {\n        var timeFromDate = dateMath.parse(timeFromInfo.from);\n        this.timeInfo = timeFromInfo.display;\n        this.rangeRaw.from = timeFromInfo.from;\n        this.rangeRaw.to = timeFromInfo.to;\n        this.range.from = timeFromDate;\n        this.range.to = dateMath.parse(timeFromInfo.to);\n      }\n    }\n\n    if (this.panel.timeShift) {\n      var timeShiftInterpolated = this.templateSrv.replace(this.panel.timeShift, this.panel.scopedVars);\n      var timeShiftInfo = rangeUtil.describeTextRange(timeShiftInterpolated);\n      if (timeShiftInfo.invalid) {\n        this.timeInfo = 'invalid timeshift';\n        return;\n      }\n\n      var timeShift = '-' + timeShiftInterpolated;\n      this.timeInfo += ' timeshift ' + timeShift;\n      this.range.from = dateMath.parseDateMath(timeShift, this.range.from, false);\n      this.range.to = dateMath.parseDateMath(timeShift, this.range.to, true);\n\n      this.rangeRaw = this.range;\n    }\n\n    if (this.panel.hideTimeOverride) {\n      this.timeInfo = '';\n    }\n  }\n\n  updateTimeRange(datasource) {\n    this.datasource = datasource || this.datasource;\n    this.range = this.timeSrv.timeRange();\n    this.rangeRaw = this.range.raw;\n\n    this.applyPanelTimeOverrides();\n\n    if (this.panel.maxDataPoints) {\n      this.resolution = this.panel.maxDataPoints;\n    } else {\n      this.resolution = Math.ceil($(window).width() * (this.panel.span / 12));\n    }\n\n    this.calculateInterval();\n\n    return this.datasource;\n  }\n\n  issueQueries(datasource) {\n    return new Promise((resolve, reject) => {\n      this.datasource = datasource;\n\n      if (!this.panel.targets || this.panel.targets.length === 0) {\n        return this.$q.when([]);\n      }\n\n      // make shallow copy of scoped vars,\n      // and add built in variables interval and interval_ms\n      var scopedVars = Object.assign({}, this.panel.scopedVars, {\n        \"__interval\":     {text: this.interval,   value: this.interval},\n        \"__interval_ms\":  {text: this.intervalMs, value: this.intervalMs},\n      });\n\n      var metricsQuery = {\n        panelId: this.panel.id,\n        range: this.range,\n        rangeRaw: this.rangeRaw,\n        interval: this.interval,\n        intervalMs: this.intervalMs,\n        targets: this.panel.targets,\n        format: this.panel.renderer === 'png' ? 'png' : 'json',\n        maxDataPoints: this.resolution,\n        scopedVars: scopedVars,\n        cacheTimeout: this.panel.cacheTimeout\n      };\n      return resolve(datasource.query(metricsQuery));\n    });\n  }\n\n  handleQueryResult(result) {\n    this.setTimeQueryEnd();\n    this.loading = false;\n\n    if (result.data.length != 2) {\n      let error = new Error();\n      error.message = 'Not enougth series error';\n      error.data = 'Metric query returns ' + result.data.length + ' series.\\nPercentage stat panel expects two series.';\n      throw error;\n    }\n    if (result.data[0].datapoints.length != 1 || result.data[1].datapoints.length != 1) {\n      let error = new Error();\n      error.message = 'Some values are not aggregated. Single result from each query is needed';\n      error.data = error.message;\n      throw error;\n    }\n\n    // check for if data source returns subject\n    if (result && result.subscribe) {\n      this.handleDataStream(result);\n      return;\n    }\n\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n\n    if (!result || !result.data) {\n      console.log('Data source query result invalid, missing data field:', result);\n      result = {data: []};\n    }\n\n    let percentage = (result.data[0].datapoints[0][0] / result.data[1].datapoints[0][0]) * 100\n\n    result.data.splice(1, 1);\n\n    result.data[0].datapoints[0][0] = percentage;\n\n    return this.events.emit('data-received', result.data);\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n    const data = {};\n    if (dataList.length > 0 && dataList[0].type === 'table'){\n      this.dataType = 'table';\n      const tableData = dataList.map(this.tableHandler.bind(this));\n      this.setTableValues(tableData, data);\n    } else {\n      this.dataType = 'timeseries';\n      this.series = dataList.map(this.seriesHandler.bind(this));\n      this.setValues(data);\n    }\n    this.data = data;\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  tableHandler(tableData) {\n    const datapoints = [];\n    const columnNames = {};\n\n    tableData.columns.forEach((column, columnIndex) => {\n      columnNames[columnIndex] = column.text;\n    });\n\n    this.tableColumnOptions = columnNames;\n    if (!_.find(tableData.columns, ['text', this.panel.tableColumn])) {\n      this.setTableColumnToSensibleDefault(tableData);\n    }\n\n    tableData.rows.forEach((row) => {\n      const datapoint = {};\n\n      row.forEach((value, columnIndex) => {\n        const key = columnNames[columnIndex];\n        datapoint[key] = value;\n      });\n\n      datapoints.push(datapoint);\n    });\n\n    return datapoints;\n  }\n\n  setTableColumnToSensibleDefault(tableData) {\n    if (this.tableColumnOptions.length === 1) {\n      this.panel.tableColumn = this.tableColumnOptions[0];\n    } else {\n      this.panel.tableColumn = _.find(tableData.columns, (col) => { return col.type !== 'time'; }).text;\n    }\n  }\n\n  setTableValues(tableData, data) {\n    if (!tableData || tableData.length === 0) {\n      return;\n    }\n\n    if (tableData[0].length === 0 || !tableData[0][0][this.panel.tableColumn]) {\n      return;\n    }\n\n    let highestValue = 0;\n    let lowestValue = Number.MAX_VALUE;\n    const datapoint = tableData[0][0];\n    data.value = datapoint[this.panel.tableColumn];\n\n    if (_.isString(data.value)) {\n      data.valueFormatted = _.escape(data.value);\n      data.value = 0;\n      data.valueRounded = 0;\n    } else {\n      const decimalInfo = this.getDecimalsForValue(data.value);\n      const formatFunc = kbn.valueFormats[this.panel.format];\n      data.valueFormatted = formatFunc(datapoint[this.panel.tableColumn], decimalInfo.decimals, decimalInfo.scaledDecimals);\n      data.valueRounded = kbn.roundValue(data.value, this.panel.decimals || 0);\n    }\n\n    this.setValueMapping(data);\n  }\n\n  setColoring(options) {\n    if (options.background) {\n      this.panel.colorValue = false;\n      this.panel.colors = ['rgba(71, 212, 59, 0.4)', 'rgba(245, 150, 40, 0.73)', 'rgba(225, 40, 40, 0.59)'];\n    } else {\n      this.panel.colorBackground = false;\n      this.panel.colors = ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'];\n    }\n    this.render();\n  }\n\n  invertColorOrder() {\n    var tmp = this.panel.colors[0];\n    this.panel.colors[0] = this.panel.colors[2];\n    this.panel.colors[2] = tmp;\n    this.render();\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {decimals: this.panel.decimals, scaledDecimals: null};\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n    norm = delta / magn, // norm is between 1.0 and 10.0\n    size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  setValues(data) {\n    data.flotpairs = [];\n\n    if (this.series.length > 1) {\n      var error = new Error();\n      error.message = 'Multiple Series Error';\n      error.data = 'Metric query returns ' + this.series.length +\n      ' series. Single Stat Panel expects a single series.\\n\\nResponse:\\n'+JSON.stringify(this.series);\n      throw error;\n    }\n\n    if (this.series && this.series.length > 0) {\n      var lastPoint = _.last(this.series[0].datapoints);\n      var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n      if (this.panel.valueName === 'name') {\n        data.value = 0;\n        data.valueRounded = 0;\n        data.valueFormatted = this.series[0].alias;\n      } else if (_.isString(lastValue)) {\n        data.value = 0;\n        data.valueFormatted = _.escape(lastValue);\n        data.valueRounded = 0;\n      } else {\n        data.value = this.series[0].stats[this.panel.valueName];\n        data.flotpairs = this.series[0].flotpairs;\n\n        var decimalInfo = this.getDecimalsForValue(data.value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        data.valueFormatted = formatFunc(data.value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        data.valueRounded = kbn.roundValue(data.value, decimalInfo.decimals);\n      }\n\n      // Add $__name variable for using in prefix or postfix\n      data.scopedVars = _.extend({}, this.panel.scopedVars);\n      data.scopedVars[\"__name\"] = {value: this.series[0].label};\n    }\n    this.setValueMapping(data);\n  }\n\n  setValueMapping(data) {\n    // check value to text mappings if its enabled\n    if (this.panel.mappingType === 1) {\n      for (let i = 0; i < this.panel.valueMaps.length; i++) {\n        let map = this.panel.valueMaps[i];\n        // special null case\n        if (map.value === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to text mapping\n        var value = parseFloat(map.value);\n        if (value === data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    } else if (this.panel.mappingType === 2) {\n      for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n        let map = this.panel.rangeMaps[i];\n        // special null case\n        if (map.from === 'null' && map.to === 'null') {\n          if (data.value === null || data.value === void 0) {\n            data.valueFormatted = map.text;\n            return;\n          }\n          continue;\n        }\n\n        // value/number to range mapping\n        var from = parseFloat(map.from);\n        var to = parseFloat(map.to);\n        if (to >= data.valueRounded && from <= data.valueRounded) {\n          data.valueFormatted = map.text;\n          return;\n        }\n      }\n    }\n\n    if (data.value === null || data.value === void 0) {\n      data.valueFormatted = \"no value\";\n    }\n  }\n\n  removeValueMap(map) {\n    var index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({value: '', op: '=', text: '' });\n  }\n\n  removeRangeMap(rangeMap) {\n    var index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({from: '', to: '', text: ''});\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var $location = this.$location;\n    var linkSrv = this.linkSrv;\n    var $timeout = this.$timeout;\n    var panel = ctrl.panel;\n    var templateSrv = this.templateSrv;\n    var data, linkInfo;\n    var $panelContainer = elem.find('.panel-container');\n    elem = elem.find('.singlestat-panel');\n\n    function setElementHeight() {\n      elem.css('height', ctrl.height + 'px');\n    }\n\n    function applyColoringThresholds(value, valueString) {\n      if (!panel.colorValue) {\n        return valueString;\n      }\n\n      var color = getColorForValue(data, value);\n      if (color) {\n        return '<span style=\"color:' + color + '\">'+ valueString + '</span>';\n      }\n\n      return valueString;\n    }\n\n    function getSpan(className, fontSize, value)  {\n      value = templateSrv.replace(value, data.scopedVars);\n      return '<span class=\"' + className + '\" style=\"font-size:' + fontSize + '\">' +\n      value + '</span>';\n    }\n\n    function getBigValueHtml() {\n      var body = '<div class=\"singlestat-panel-value-container\">';\n\n      if (panel.prefix) { body += getSpan('singlestat-panel-prefix', panel.prefixFontSize, panel.prefix); }\n\n      var value = applyColoringThresholds(data.value, data.valueFormatted);\n      body += getSpan('singlestat-panel-value', panel.valueFontSize, value);\n\n      if (panel.postfix) { body += getSpan('singlestat-panel-postfix', panel.postfixFontSize, panel.postfix); }\n\n      body += '</div>';\n\n      return body;\n    }\n\n    function getValueText() {\n      var result = panel.prefix ? panel.prefix : '';\n      result += data.valueFormatted;\n      result += panel.postfix ? panel.postfix : '';\n\n      return result;\n    }\n\n    function addGauge() {\n      var width = elem.width();\n      var height = elem.height();\n      var dimension = Math.min(width, height);\n\n      ctrl.invalidGaugeRange = false;\n      if (panel.gauge.minValue > panel.gauge.maxValue) {\n        ctrl.invalidGaugeRange = true;\n        return;\n      }\n\n      var plotCanvas = $('<div></div>');\n      var plotCss = {\n        top: '10px',\n        margin: 'auto',\n        position: 'relative',\n        height: (height * 0.9) + 'px',\n        width:  dimension + 'px'\n      };\n\n      plotCanvas.css(plotCss);\n\n      var thresholds = [];\n      for (var i = 0; i < data.thresholds.length; i++) {\n        thresholds.push({\n          value: data.thresholds[i],\n          color: data.colorMap[i]\n        });\n      }\n      thresholds.push({\n        value: panel.gauge.maxValue,\n        color: data.colorMap[data.colorMap.length  - 1]\n      });\n\n      var bgColor = config.bootData.user.lightTheme\n      ? 'rgb(230,230,230)'\n      : 'rgb(38,38,38)';\n\n      var fontScale = parseInt(panel.valueFontSize) / 100;\n      var fontSize = Math.min(dimension/5, 100) * fontScale;\n      var gaugeWidth = Math.min(dimension/6, 60);\n      var thresholdMarkersWidth = gaugeWidth/5;\n\n      var options = {\n        series: {\n          gauges: {\n            gauge: {\n              min: panel.gauge.minValue,\n              max: panel.gauge.maxValue,\n              background: { color: bgColor },\n              border: { color: null },\n              shadow: { show: false },\n              width: gaugeWidth,\n            },\n            frame: { show: false },\n            label: { show: false },\n            layout: { margin: 0, thresholdWidth: 0 },\n            cell: { border: { width: 0 } },\n            threshold: {\n              values: thresholds,\n              label: {\n                show: panel.gauge.thresholdLabels,\n                margin: 8,\n                font: { size: 18 }\n              },\n              show: panel.gauge.thresholdMarkers,\n              width: thresholdMarkersWidth,\n            },\n            value: {\n              color: panel.colorValue ? getColorForValue(data, data.valueRounded) : null,\n              formatter: function() { return getValueText(); },\n              font: { size: fontSize, family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif' }\n            },\n            show: true\n          }\n        }\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: [[0, data.valueRounded]]\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function addSparkline() {\n      var width = elem.width() + 20;\n      if (width < 30) {\n        // element has not gotten it's width yet\n        // delay sparkline render\n        setTimeout(addSparkline, 30);\n        return;\n      }\n\n      var height = ctrl.height;\n      var plotCanvas = $('<div></div>');\n      var plotCss = {};\n      plotCss.position = 'absolute';\n\n      if (panel.sparkline.full) {\n        plotCss.bottom = '5px';\n        plotCss.left = '-5px';\n        plotCss.width = (width - 10) + 'px';\n        var dynamicHeightMargin = height <= 100 ? 5 : (Math.round((height/100)) * 15) + 5;\n        plotCss.height = (height - dynamicHeightMargin) + 'px';\n      } else {\n        plotCss.bottom = \"0px\";\n        plotCss.left = \"-5px\";\n        plotCss.width = (width - 10) + 'px';\n        plotCss.height = Math.floor(height * 0.25) + \"px\";\n      }\n\n      plotCanvas.css(plotCss);\n\n      var options = {\n        legend: { show: false },\n        series: {\n          lines:  {\n            show: true,\n            fill: 1,\n            lineWidth: 1,\n            fillColor: panel.sparkline.fillColor,\n          },\n        },\n        yaxes: { show: false },\n        xaxis: {\n          show: false,\n          mode: \"time\",\n          min: ctrl.range.from.valueOf(),\n          max: ctrl.range.to.valueOf(),\n        },\n        grid: { hoverable: false, show: false },\n      };\n\n      elem.append(plotCanvas);\n\n      var plotSeries = {\n        data: data.flotpairs,\n        color: panel.sparkline.lineColor\n      };\n\n      $.plot(plotCanvas, [plotSeries], options);\n    }\n\n    function render() {\n      if (!ctrl.data) { return; }\n      data = ctrl.data;\n\n      // get thresholds\n      data.thresholds = panel.thresholds.split(',').map(function(strVale) {\n        return Number(strVale.trim());\n      });\n      data.colorMap = panel.colors;\n\n      setElementHeight();\n\n      var body = panel.gauge.show ? '' : getBigValueHtml();\n\n      if (panel.colorBackground && !isNaN(data.value)) {\n        var color = getColorForValue(data, data.value);\n        if (color) {\n          $panelContainer.css('background-color', color);\n          if (scope.fullscreen) {\n            elem.css('background-color', color);\n          } else {\n            elem.css('background-color', '');\n          }\n        }\n      } else {\n        $panelContainer.css('background-color', '');\n        elem.css('background-color', '');\n      }\n\n      elem.html(body);\n\n      if (panel.sparkline.show) {\n        addSparkline();\n      }\n\n      if (panel.gauge.show) {\n        addGauge();\n      }\n\n      elem.toggleClass('pointer', panel.links.length > 0);\n\n      if (panel.links.length > 0) {\n        linkInfo = linkSrv.getPanelLinkAnchorInfo(panel.links[0], data.scopedVars);\n      } else {\n        linkInfo = null;\n      }\n    }\n\n    function hookupDrilldownLinkTooltip() {\n      // drilldown link tooltip\n      var drilldownTooltip = $('<div id=\"tooltip\" class=\"\">hello</div>\"');\n\n      elem.mouseleave(function() {\n        if (panel.links.length === 0) { return;}\n        $timeout(function() {\n          drilldownTooltip.detach();\n        });\n      });\n\n      elem.click(function(evt) {\n        if (!linkInfo) { return; }\n        // ignore title clicks in title\n        if ($(evt).parents('.panel-header').length > 0) { return; }\n\n        if (linkInfo.target === '_blank') {\n          var redirectWindow = window.open(linkInfo.href, '_blank');\n          redirectWindow.location;\n          return;\n        }\n\n        if (linkInfo.href.indexOf('http') === 0) {\n          window.location.href = linkInfo.href;\n        } else {\n          $timeout(function() {\n            $location.url(linkInfo.href);\n          });\n        }\n\n        drilldownTooltip.detach();\n      });\n\n      elem.mousemove(function(e) {\n        if (!linkInfo) { return;}\n\n        drilldownTooltip.text('click to go to: ' + linkInfo.title);\n        drilldownTooltip.place_tt(e.pageX, e.pageY-50);\n      });\n    }\n\n    hookupDrilldownLinkTooltip();\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {decimals: this.panel.decimals, scaledDecimals: null};\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n    norm = delta / magn, // norm is between 1.0 and 10.0\n    size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n}\n\nfunction getColorForValue(data, value) {\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i-1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nPercentagePluginCtrl.templateUrl = 'module.html';\n"]}